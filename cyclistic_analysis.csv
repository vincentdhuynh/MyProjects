--Exploratory Data Analysis

SELECT COUNT(*)
FROM rides;

SELECT * 
FROM rides LIMIT 1000;

-- Check for duplicates in unique column
SELECT ride_id, COUNT(ride_id)
FROM rides
GROUP BY ride_id
HAVING COUNT(ride_id) > 1;

-- Are there more members than casual riders?
SELECT member_casual, COUNT(member_casual)
FROM rides
GROUP BY 1;

-- Which bike type do members use most? Which bike type do casual riders use most?
SELECT CASE member_casual
	WHEN member_casual = 'member' THEN 'member'
	WHEN member_casual = 'casual' THEN 'casual'
END AS member_casual, rideable_type, COUNT(rideable_type) AS ride_count
FROM rides
GROUP BY 1, 2;

-- What is the average duration of rides for members vs casual riders?
SELECT member_casual, AVG(TIMEDIFF(ended_at, started_at)) AS average_ride_minutes
FROM rides
GROUP BY 1;


